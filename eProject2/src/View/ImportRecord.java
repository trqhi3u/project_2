/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import controller.ProductDAO;
import controller.RecordDAO;
import controller.SupplierDAO;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Constant;
import model.RecordDetail;
import model.RecordType;
import model.Supplier;

/**
 *
 * @author Flynn
 */
public class ImportRecord extends javax.swing.JDialog {

    ArrayList<String> suppliers;
    ArrayList<RecordDetail> recordDetails;
    RecordDetail recordDetail;
    Supplier supplier;
    model.Record record;
    model.Product product;
    DefaultTableModel model;
    int taxPercent;

    /**
     * Creates new form Receipt
     */
    public ImportRecord(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initialRecord();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        costPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        supplierComboBox = new javax.swing.JComboBox<>();
        date = new com.toedter.calendar.JDateChooser();
        productQuantity = new javax.swing.JTextField();
        validate_text = new javax.swing.JLabel();
        receipt = new javax.swing.JPanel();
        invoice = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordTable = new javax.swing.JTable();
        vat = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        subtotal = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tax = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        receiptCode = new javax.swing.JTextField();
        supplierCode = new javax.swing.JTextField();
        receiptDate = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        supplierName = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        supplierLocation = new javax.swing.JTextField();
        supplierContact = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        createRecord = new javax.swing.JButton();
        print = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        newRecord = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        searchByTab = new javax.swing.JTextField();
        search_false = new javax.swing.JLabel();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Date");

        jLabel2.setText("Product Code");

        productCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productCodeKeyPressed(evt);
            }
        });

        jLabel3.setText("Cost Price");

        costPrice.setEditable(false);

        jLabel4.setText("Quantity");

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-buy-26.png"))); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-remove-26.png"))); // NOI18N
        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-edit-26.png"))); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-clear-symbol-24.png"))); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        supplierComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Supplier' Name" }));

        productQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productQuantityKeyReleased(evt);
            }
        });

        validate_text.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supplierComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(add)
                            .addComponent(edit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remove, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(clear, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productCode, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(costPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                            .addComponent(productQuantity)
                            .addComponent(validate_text, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(supplierComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(productCode, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(costPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validate_text)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(add))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remove)
                    .addComponent(edit))
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab("PURCHASE", jPanel1);

        receipt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        invoice.setBackground(new java.awt.Color(204, 255, 204));
        invoice.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 0));
        jLabel9.setText("WAREHOUSE RECEIPT");

        jLabel10.setText("Receipt Code");

        jLabel11.setText("Supplier Inv. No:");

        jLabel12.setText("Date:");

        recordTable.setAutoCreateRowSorter(true);
        recordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index", "Item name", "Code", "Qyt", "Unit price", "VAT", "Total"
            }
        ));
        recordTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recordTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(recordTable);

        vat.setText("Prices Include VAT");
        vat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vatActionPerformed(evt);
            }
        });

        jLabel14.setText("Subtotal:");

        subtotal.setEditable(false);

        jLabel15.setText("Tax:");

        tax.setEditable(false);

        jLabel16.setText("Total:");

        total.setEditable(false);

        receiptCode.setEditable(false);

        supplierCode.setEditable(false);

        receiptDate.setEditable(false);
        receiptDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel5.setText("Công ty TNHH Aptech, 54 Lê Thanh Nghị, Hai Bà Trưng, Hà Nội");

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jLabel7.setText("Tel: 03099999");

        jLabel8.setText("Supplier Name");

        supplierName.setEditable(false);

        jLabel13.setText("Supplier Location");

        supplierLocation.setEditable(false);

        supplierContact.setEditable(false);

        jLabel17.setText("Supplier Contact");

        javax.swing.GroupLayout invoiceLayout = new javax.swing.GroupLayout(invoice);
        invoice.setLayout(invoiceLayout);
        invoiceLayout.setHorizontalGroup(
            invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoiceLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 842, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(invoiceLayout.createSequentialGroup()
                        .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(invoiceLayout.createSequentialGroup()
                                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(receiptCode, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(supplierCode, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(receiptDate))
                                .addGap(230, 230, 230)
                                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(invoiceLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(30, 30, 30)
                                        .addComponent(supplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(invoiceLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(30, 30, 30)
                                        .addComponent(supplierLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(invoiceLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(30, 30, 30)
                                        .addComponent(supplierContact, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(137, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoiceLayout.createSequentialGroup()
                        .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(invoiceLayout.createSequentialGroup()
                                .addComponent(vat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addGap(27, 27, 27)
                                .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(invoiceLayout.createSequentialGroup()
                                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(invoiceLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(27, 27, 27)
                                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(invoiceLayout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(27, 27, 27)
                                        .addComponent(tax, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(36, 36, 36))))
        );
        invoiceLayout.setVerticalGroup(
            invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(receiptCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(supplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(supplierLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(supplierCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(supplierContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(receiptDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vat)
                    .addComponent(jLabel14)
                    .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(tax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(invoiceLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(invoiceLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        createRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-purchase-order-26.png"))); // NOI18N
        createRecord.setText("Create");
        createRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRecordActionPerformed(evt);
            }
        });

        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-print-26.png"))); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-delete-26.png"))); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout receiptLayout = new javax.swing.GroupLayout(receipt);
        receipt.setLayout(receiptLayout);
        receiptLayout.setHorizontalGroup(
            receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receiptLayout.createSequentialGroup()
                        .addComponent(print)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createRecord)
                        .addGap(40, 40, 40)
                        .addComponent(delete)))
                .addContainerGap())
        );
        receiptLayout.setVerticalGroup(
            receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receiptLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(invoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createRecord)
                    .addComponent(delete)
                    .addComponent(print))
                .addGap(21, 21, 21))
        );

        newRecord.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-plus-40.png"))); // NOI18N
        newRecord.setText("New");
        newRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRecordActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 102, 204));
        jLabel20.setText("RECEIPT");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("SEARCH");

        searchByTab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchByTabKeyPressed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(receipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(search_false, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(238, 238, 238))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(back))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newRecord)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(38, 38, 38)
                                .addComponent(searchByTab, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(newRecord)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchByTab, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_false)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1)
                    .addComponent(receipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        recordDetail = new RecordDetail();
        if (productCode.getText().equals("") | date.getDateFormatString().equals("") | productQuantity.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields!");
        } else {
            if (recordDetails.size() > 0) {//TH da co sp trong record
                try {
                    String selectedSupplier = ((String) supplierComboBox.getSelectedItem());
                    if ("SELECT SUPPLIER'S NAME".equalsIgnoreCase(supplier.getSupplierName())) {
                        JOptionPane.showMessageDialog(null, "Please select a supplier and try again!");
                    } else {
                        if (!selectedSupplier.equals(supplier.getSupplierName()) | !record.getDate().equals(new SimpleDateFormat("yyyy/MM/dd").format(date.getDate()))) {
                            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to change Record date or supplier name", "Warning", JOptionPane.YES_NO_OPTION);
                            if (dialogResult == JOptionPane.YES_OPTION) {
                                supplier = new SupplierDAO().convertToArrayList(new SupplierDAO().getQueryResult("supplierName = '" + selectedSupplier + "'")).get(0);
                                record.setSupplierID(supplier.getSupplierID());
                                record.setDate(new SimpleDateFormat("yyyy/MM/dd").format(date.getDate()));
                            } else {
                                System.out.println("Here");
                            }
                        }
                        supplierComboBox.setSelectedItem(supplier.getSupplierName());
                        date.setDate(new SimpleDateFormat("yyyy/MM/dd").parse(record.getDate()));

                        //check existed prod
                        if (isExisted(product.getProductCode()) != -1) {
                            int index = isExisted(product.getProductCode());
                            int newQuantity = recordDetails.get(index).getQuantity() + Integer.parseInt(productQuantity.getText());
                            recordDetails.get(index).setQuantity(newQuantity);
                        } else {
                            //create new recordDetail
                            recordDetail.setProductID(product.getProductID());
                            recordDetail.setQuantity(Integer.parseInt(productQuantity.getText()));
                            recordDetails.add(recordDetail);
                        }
                        loadData();

                    }

                } catch (ParseException ex) {
                    Logger.getLogger(ImportRecord.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else { //TH chua co sp nao trong record
                supplier.setSupplierName((String) supplierComboBox.getSelectedItem());
                if ("SELECT SUPPLIER'S NAME".equalsIgnoreCase(supplier.getSupplierName())) {
                    JOptionPane.showMessageDialog(null, "Please select a supplier and try again!");
                } else {
                    supplier = new SupplierDAO().convertToArrayList(new SupplierDAO().getQueryResult("supplierName = '" + supplier.getSupplierName() + "'")).get(0);
                    //create new recordDetail
                    recordDetail.setProductID(product.getProductID());
                    recordDetail.setQuantity(Integer.parseInt(productQuantity.getText()));
                    recordDetails.add(recordDetail);
                    //set record
                    record.setSupplierID(supplier.getSupplierID());
                    record.setDate(new SimpleDateFormat("yyyy/MM/dd").format(date.getDate()));
                    record.setRecordType(RecordType.IMPORT);
                    //show table
                    loadData();
                }
            }
            //show invoice

        }

    }//GEN-LAST:event_addActionPerformed

    private void productCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productCodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            try {
                // TODO add your handling code here:
                String text = productCode.getText();
                if (!new ProductDAO().getQueryResult("productCode = '" + text + "' AND status = 'AVAILABLE'").next() & !new ProductDAO().getQueryResult("productCode = '" + text + "' AND status = 'SOLD_OUT'").next()) {
                    JOptionPane.showMessageDialog(null, "This product is not exist or wrong product code!");
                } else {
                    product = new ProductDAO().convertToArrayList(new ProductDAO().getQueryResult("productCode = '" + productCode.getText() + "'")).get(0);
                    costPrice.setText(Float.toString(product.getCostPrice()));

                }
            } catch (SQLException ex) {
                Logger.getLogger(ImportRecord.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_productCodeKeyPressed

    private void createRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRecordActionPerformed
        // TODO add your handling code here:
        new RecordDAO().addRecord(record, recordDetails);
        receiptCode.setText(record.getRecordCode());
        clearActionPerformed(evt);
        add.setEnabled(false);
        remove.setEnabled(false);
        edit.setEnabled(false);
        clear.setEnabled(false);
        createRecord.setEnabled(false);
        vat.setEnabled(false);
    }//GEN-LAST:event_createRecordActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        date.setDate(null);
        productCode.setText("");
        productQuantity.setText("");
        costPrice.setText("");
        supplierComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_clearActionPerformed

    private void vatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vatActionPerformed
        // TODO add your handling code here:
        if (vat.isSelected()) {
            record.setVat(Constant.VAT);
        } else {
            record.setVat(Constant.NO_VAT);
        }
        loadData();
    }//GEN-LAST:event_vatActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete? This action cannot be undone!", "Warning", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            new RecordDAO().deleteRecord(record);
            newRecordActionPerformed(evt);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        if (recordTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Select a table data first!");
        } else {
            int row = recordTable.getSelectedRow();

            recordDetails.get(row).setProductID(product.getProductID());
            recordDetails.get(row).setQuantity(Integer.parseInt(productQuantity.getText()));

            loadData();

        }
    }//GEN-LAST:event_editActionPerformed

    private void recordTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordTableMouseClicked
        // TODO add your handling code here:
        int row = recordTable.getSelectedRow();
        recordDetail = recordDetails.get(row);
        product = new ProductDAO().convertToArrayList(new ProductDAO().getQueryResult("productID = '" + recordDetail.getProductID() + "'")).get(0);
        productCode.setText(product.getProductCode());
        costPrice.setText(Float.toString(product.getCostPrice()));
        productQuantity.setText(Integer.toString(recordDetail.getQuantity()));
    }//GEN-LAST:event_recordTableMouseClicked

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        int row = recordTable.getSelectedRow();
        recordDetails.remove(row);

        productCode.setText("");
        costPrice.setText("");
        productQuantity.setText("");
        record.setTotalPrice(getTotalPrice());

        loadData();
        tax.setText(Integer.toString(taxPercent));
        total.setText(Float.toString(record.getTotalPrice() * (100 + taxPercent) / 100));
    }//GEN-LAST:event_removeActionPerformed

    private void newRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRecordActionPerformed
        // TODO add your handling code here:
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        initialRecord();
        for (Component control : invoice.getComponents()) {
            if (control instanceof JTextField) {
                JTextField ctrl = (JTextField) control;
                ctrl.setText("");
            } else if (control instanceof JComboBox) {
                JComboBox ctrl = (JComboBox) control;
                ctrl.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_newRecordActionPerformed

    private void searchByTabKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchByTabKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = searchByTab.getText();
            loadBySearch(text);
            add.setEnabled(false);
            remove.setEnabled(false);
            edit.setEnabled(false);
            clear.setEnabled(false);
            createRecord.setEnabled(false);
            vat.setEnabled(false);
            delete.setEnabled(true);
        }
    }//GEN-LAST:event_searchByTabKeyPressed

    private void productQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productQuantityKeyReleased
        // TODO add your handling code here:
        try {
            if ("".equals(productQuantity.getText())) {
                return;
            }
            int i = Integer.parseInt(productQuantity.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "You can input only number");
            productQuantity.setText("");

        }
    }//GEN-LAST:event_productQuantityKeyReleased

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
//        new RecordDAO().printInvoice(invoice);
        new RecordDAO().printInvoice(record);
    }//GEN-LAST:event_printActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        dashboard d = new dashboard();
        d.setVisible(true);
        this.hide();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ImportRecord dialog = new ImportRecord(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JTextField costPrice;
    private javax.swing.JButton createRecord;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JPanel invoice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton newRecord;
    private javax.swing.JButton print;
    private javax.swing.JTextField productCode;
    private javax.swing.JTextField productQuantity;
    private javax.swing.JPanel receipt;
    private javax.swing.JTextField receiptCode;
    private javax.swing.JFormattedTextField receiptDate;
    private javax.swing.JTable recordTable;
    private javax.swing.JButton remove;
    private javax.swing.JTextField searchByTab;
    private javax.swing.JLabel search_false;
    private javax.swing.JTextField subtotal;
    private javax.swing.JTextField supplierCode;
    private javax.swing.JComboBox<String> supplierComboBox;
    private javax.swing.JTextField supplierContact;
    private javax.swing.JTextField supplierLocation;
    private javax.swing.JTextField supplierName;
    private javax.swing.JTextField tax;
    private javax.swing.JTextField total;
    private javax.swing.JLabel validate_text;
    private javax.swing.JCheckBox vat;
    // End of variables declaration//GEN-END:variables

    public void supplierName() {
        suppliers = new RecordDAO().getInfo("suppliers", "supplierName", "GROUP BY supplierName");
        for (String supplier : suppliers) {
            supplierComboBox.addItem(supplier);
        }
    }

    public void initialRecord() {
        model = (DefaultTableModel) recordTable.getModel();

        add.setEnabled(true);
        remove.setEnabled(true);
        edit.setEnabled(true);
        clear.setEnabled(true);
        createRecord.setEnabled(true);
        vat.setEnabled(true);
        delete.setEnabled(false);

        recordDetails = new ArrayList<RecordDetail>();
        supplierComboBox.removeAllItems();
        supplierComboBox.addItem("Select Supplier's Name");
        date.setDate(new Date());
        supplierName();
        record = new model.Record();
        record.setHandleBy(login.user.getId());
        supplier = new Supplier();
    }

    public int isExisted(String productCode) {
        int result = -1;
        for (int i = 0; i < recordDetails.size(); i++) {
            String output = new RecordDAO().getInfo("products", "productCode", "WHERE productID = '" + recordDetails.get(i).getProductID() + "'").get(0);
            if (productCode.toLowerCase().equals(output.toLowerCase())) {
                result = i;
                break;
            }
        }
        return result;
    }

    private float getTotalPrice() {
        float total = 0;
        for (RecordDetail rcdt : recordDetails) {
            total += rcdt.getQuantity() * Float.parseFloat(new RecordDAO().getInfo("products", "costPrice", "WHERE productID = '" + rcdt.getProductID() + "'").get(0));
        }
        return total;
    }

    private void loadData() {
        receiptCode.setText(record.getRecordCode());
        productCode.setText("");
        costPrice.setText("");
        productQuantity.setText("");

        record.setTotalPrice(getTotalPrice());
        supplier = new SupplierDAO().convertToArrayList(new SupplierDAO().getQueryResult("supplierID = '" + record.getSupplierID() + "'")).get(0);
        supplierCode.setText(supplier.getSupplierCode());
        supplierName.setText(supplier.getSupplierName());
        supplierLocation.setText(supplier.getSupplierLocation());
        supplierContact.setText(supplier.getSupplierContact());
        receiptDate.setText(record.getDate());
        subtotal.setText(Float.toString(record.getTotalPrice()));
        tax.setText(Integer.toString(record.getVat()));
        total.setText(Float.toString(record.getTotalPrice() * (100 + record.getVat()) / 100));

        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        for (RecordDetail rcdt : recordDetails) {
            product = new ProductDAO().convertToArrayList(new ProductDAO().getQueryResult("productID = '" + rcdt.getProductID() + "'")).get(0);
            model.addRow(new Object[]{
                recordDetails.indexOf(rcdt) + 1,
                product.getProductName(),
                product.getProductCode(),
                rcdt.getQuantity(),
                product.getCostPrice(),
                record.getVat(),
                product.getCostPrice() * rcdt.getQuantity()
            });
        }
    }

    private void loadBySearch(String text) {
        try {
            record = new RecordDAO().getSearchRecordQueryResult(text);
            recordDetails = new RecordDAO().getSearchRecordDetailQueryResult(record);
            if(record.getRecordType() == RecordType.DELETED){
                JOptionPane.showMessageDialog(null, "This record is deleted");
            } else {
                loadData();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot found this record!");

        }

    }

}
